% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/permutation_join.R
\name{permutation_join}
\alias{permutation_join}
\title{Permutation Join of Two URL Sets}
\usage{
permutation_join(A, B)
}
\arguments{
\item{A}{A data frame. It must contain at least two columns:
\code{URL} (character, the original URL) and \code{Permutation} (list,
where each element is a data frame of permutations). Each data frame
within the \code{Permutation} list must have a column named \code{Permutations}
(which will be renamed to \code{Perm}).}

\item{B}{A data frame, with the same structure as \code{A}.}
}
\value{
A single data frame combining the processed permutations from both
  A and B. The resulting data frame will have columns including \code{Perm}
  (the permutation), \code{Source} (the original URL from which the
  permutation was derived), \code{SourceSet} (a factor indicating origin,
  e.g., "SetA" or "SetB"), and any other columns originally present in the
  innermost permutation data frames. Returns \code{NULL} if inputs are invalid.
}
\description{
This function takes two datasets, A and B, each containing URLs and their
permutations, flattens them, and then joins them into a single data frame.
Each permutation is augmented with information about its original URL (Source)
and a label indicating whether it came from dataset A or B (SourceSet).
}
\examples{
# Example Data for A
perms_df_a1 <- data.frame(Permutations = c("http://ex.com/p1", "http://ex.com/p2"),
                          OtherCol = 1:2, stringsAsFactors = FALSE)
perms_df_a2 <- data.frame(Permutations = c("http://samp.org/a", "http://samp.org/b"),
                          OtherCol = 3:4, stringsAsFactors = FALSE)
A_data <- data.frame(URL = c("http://example.com", "http://sample.org"),
                     stringsAsFactors = FALSE)
A_data$Permutation <- list(perms_df_a1, perms_df_a2)

# Example Data for B
perms_df_b1 <- data.frame(Permutations = c("http://test.net/x", "http://test.net/y"),
                          AnotherCol = c("foo", "bar"), stringsAsFactors = FALSE)
B_data <- data.frame(URL = c("http://test.net"), stringsAsFactors = FALSE)
B_data$Permutation <- list(perms_df_b1)

# Perform the permutation join using base data.frames
joined_data_df <- permutation_join(A_data, B_data)
if (!is.null(joined_data_df)) {
  print(head(joined_data_df))
  print(table(joined_data_df$SourceSet))
}

# Example with empty input for B
empty_df_B <- data.frame(URL = character(0), stringsAsFactors = FALSE)
empty_df_B$Permutation <- vector("list", 0)

joined_with_empty_B <- permutation_join(A_data, empty_df_B)
if (!is.null(joined_with_empty_B)) {
 print(head(joined_with_empty_B))
 print(table(joined_with_empty_B$SourceSet))
}

# Example with both inputs empty
empty_df_A <- data.frame(URL = character(0), stringsAsFactors = FALSE)
empty_df_A$Permutation <- vector("list", 0)

joined_empty_both <- permutation_join(empty_df_A, empty_df_B)
if (!is.null(joined_empty_both)) {
 print(head(joined_empty_both)) # Should be an empty data frame with defined columns
 print(dim(joined_empty_both))
}

}
