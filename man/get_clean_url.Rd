% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rurl.R
\name{get_clean_url}
\alias{get_clean_url}
\title{Get cleaned URLs}
\usage{
get_clean_url(
  url,
  protocol_handling = "keep",
  www_handling = "none",
  case_handling = "lower",
  trailing_slash_handling = "none",
  subdomain_levels_to_keep = NULL
)
}
\arguments{
\item{url}{A character vector containing URLs to be parsed.}

\item{protocol_handling}{A character string specifying how to handle protocols.
See \code{\link{safe_parse_url}} for details. Defaults to "keep".}

\item{www_handling}{A character string specifying how to handle "www" prefixes.
See \code{\link{safe_parse_url}} for details. Defaults to "none".}

\item{case_handling}{A character string specifying how to handle the case of
                   the cleaned URL. Defaults to "lower".
\itemize{
  \item{"keep": Preserves the original casing.}
  \item{"lower": (Default) Converts the cleaned URL to lowercase.}
  \item{"upper": Converts the cleaned URL to uppercase.}
}}

\item{trailing_slash_handling}{A character string specifying how to handle
trailing slashes in the path component of the cleaned URL. Defaults to "none".
\itemize{
  \item{"none": (Default) No specific handling is applied. Path remains as is after initial parsing.}
  \item{"keep": Ensures a trailing slash. If a path exists and doesn't end with one, it's added. If path is just "/", it's kept.}
  \item{"strip": Removes a trailing slash if present, unless the path is solely "/".}
}}

\item{subdomain_levels_to_keep}{An integer or NULL. Determines how many levels of subdomains are kept,
in addition to any 'www.' prefix handled by `www_handling`.
\itemize{
  \item{`NULL`: (Default) No specific subdomain stripping is performed beyond `www_handling`.}
  \item{`0`: All subdomains are stripped. If `www_handling` preserved or added 'www.',
       it remains (e.g., 'www.sub.example.com' becomes 'www.example.com'; 'sub.example.com' becomes 'example.com').}
  \item{`N > 0`: Keeps up to N levels of subdomains, counted from right-to-left (closest to the registered domain),
       in addition to any 'www.' prefix. E.g., if N=1, 'three.two.one.example.com' becomes 'one.example.com';
       'www.three.two.one.example.com' (post www_handling) becomes 'www.one.example.com'.}
}}
}
\value{
A character vector of cleaned URLs.
}
\description{
This function returns the cleaned version of the URLs after applying
protocol, www, case, and trailing slash handling rules.
}
\examples{
get_clean_url("Example.COM/Path") # Default lower, default no slash change
get_clean_url("Example.COM/Path", case_handling = "keep", trailing_slash_handling = "keep")
get_clean_url("Example.COM/Path/", case_handling = "upper", trailing_slash_handling = "strip")
get_clean_url("http://example.com", www_handling = "strip")
}
